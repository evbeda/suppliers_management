# -*- coding: utf-8 -*-
# Generated by Django 1.11.24 on 2019-10-14 16:51
from __future__ import unicode_literals

from django.db import migrations
from django.contrib.auth.models import Group, Permission
from django.contrib.contenttypes.models import ContentType


def add_group_permissions(*args, **kwargs):
    content_type, _ = ContentType.objects.get_or_create(app_label='users_app', model='user')
    # supplier
    permissions = [
        Permission.objects.get_or_create(
            codename='can_view_supplier',
            name='Can access supplier views',
            content_type=content_type,
        ),
        Permission.objects.get_or_create(
            codename='can_create_taxpayer',
            name='Can create taxpayer',
            content_type=content_type,
        ),
        Permission.objects.get_or_create(
            codename='can_create_invoice',
            name='Can create invoice',
            content_type=content_type,
        ),
    ]
    group, created = Group.objects.get_or_create(name='supplier')
    if created:
        for permission, _ in permissions:
            group.permissions.add(permission)

    # AP admin
    permissions = [
        Permission.objects.get_or_create(codename='can_view_ap', name='Can view', content_type=content_type),
        Permission.objects.get_or_create(codename='can_edit_taxpayer', name='Can edit taxpayer', content_type=content_type),
        Permission.objects.get_or_create(codename='can_edit_invoice', name='Can edit invoice', content_type=content_type),
        Permission.objects.get_or_create(codename='can_approve', name='Can approve', content_type=content_type),
        Permission.objects.get_or_create(codename='can_reject', name='Can reject', content_type=content_type),
        Permission.objects.get_or_create(codename='can_request_change', name='Can request changes', content_type=content_type),
        Permission.objects.get_or_create(codename='can_pay_invoice', name='Can pay invoices', content_type=content_type),
    ]
    group, created = Group.objects.get_or_create(name='ap_admin')
    if created:
        for permission, _ in permissions:
            group.permissions.add(permission)

    # AP reporter
    permissions = [
        Permission.objects.get_or_create(codename='can_view_ap', name='Can view', content_type=content_type),
        Permission.objects.get_or_create(codename='can_view_reports', name='Can view reports', content_type=content_type),
    ]
    group, created = Group.objects.get_or_create(name='ap_reporter')
    if created:
        for permission, _ in permissions:
            group.permissions.add(permission)

    # AP Manager
    permissions = [
        Permission.objects.get_or_create(codename='can_manage_aps', name='Can manage ap permissions', content_type=content_type),
    ]
    group, created = Group.objects.get_or_create(name='ap_manager')
    if created:
        for permission, _ in permissions:
            group.permissions.add(permission)


class Migration(migrations.Migration):

    dependencies = [
        ('users_app', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(add_group_permissions),
    ]
